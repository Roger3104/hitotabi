<div class="masonry-wrapper">
  <div class="masonry">
    <% posts.each do |post| %>
      <div class="masonry-item">
          <%= link_to post_path(post.id), class:"masonry-content image_link" do %>
            <% if post.image.attached? %>
              <%= image_tag post.image, loading:"lazy", class:"" %>
              <div class="image-content-hide">
                <%= post.title %>
              </div>
              <% if post.favorited?(current_user) %>
                  <div class="favorite-hide">
                    <i class="fas fa-map-marked-alt" style="color: #ffffff;"></i>
                  </div>
              <% else %>
              <% end %>
            <% else %>
              <%= image_tag 'no_image.png', loading:"lazy" %>
            <% end %>
          <% end %>
      </div>
    <% end %>
  </div>
</div>

<!------------masonryç”¨-------------->
    <script>
      const grid = document.getElementsByClassName('masonry')[0];
      const allItems = document.getElementsByClassName('masonry-item');
      const rowHeight = parseInt(window.getComputedStyle(grid).getPropertyValue('grid-auto-rows'));
      const rowGap = parseInt(window.getComputedStyle(grid).getPropertyValue('grid-row-gap'));

      const resizeGridItem = (item) => {
        const rowSpan = Math.ceil((item.querySelector('.masonry-content').getBoundingClientRect().height + rowGap) / (rowHeight + rowGap));
        item.style.gridRowEnd = 'span ' + rowSpan;
      }

      const resizeAllGridItems = () => {
        for( let i=0; i < allItems.length; i++){
          resizeGridItem(allItems[i]);
        }
      }

      let timer = false;
      window.addEventListener('resize', () => {
        if (timer !== false) {
          clearTimeout(timer);
        }
        timer = setTimeout(function() {
          resizeAllGridItems();
        }, 200);
      });

      window.addEventListener('load', () => {
        for(i=0; i<allItems.length; i++){
          imagesLoaded( allItems[i], (instance) => {
            const item = instance.elements[0];
            resizeGridItem(item);
          });
        }
      });
    </script>
    <!---------------------------------------------------->